// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: protos/workflow_node.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_UNKNOWN     Status = 0
	Status_PASS        Status = 1
	Status_FAIL        Status = 2
	Status_SKIPPED     Status = 3  // This task was not performed
	Status_FILTERED    Status = 4  // Subcategory of skipped; this is represents filtering by a planning node
	Status_TASK_ERROR  Status = 5  // Encountered an error executing the task itself
	Status_INFRA_ERROR Status = 6  // The agent framework encountered and error
	Status_TIMEOUT     Status = 7  // subcategory of infra error
	Status_CRASH       Status = 8  // subcategory of infra error
	Status_BLOCKED     Status = 9  // Waiting for dependencies
	Status_RUNNING     Status = 10 // Dispatched to Node Service
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "PASS",
		2:  "FAIL",
		3:  "SKIPPED",
		4:  "FILTERED",
		5:  "TASK_ERROR",
		6:  "INFRA_ERROR",
		7:  "TIMEOUT",
		8:  "CRASH",
		9:  "BLOCKED",
		10: "RUNNING",
	}
	Status_value = map[string]int32{
		"UNKNOWN":     0,
		"PASS":        1,
		"FAIL":        2,
		"SKIPPED":     3,
		"FILTERED":    4,
		"TASK_ERROR":  5,
		"INFRA_ERROR": 6,
		"TIMEOUT":     7,
		"CRASH":       8,
		"BLOCKED":     9,
		"RUNNING":     10,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_workflow_node_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_protos_workflow_node_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{0}
}

type NodeEdit_Type int32

const (
	NodeEdit_UNKNOWN NodeEdit_Type = 0
	NodeEdit_INSERT  NodeEdit_Type = 1
	NodeEdit_DELETE  NodeEdit_Type = 2
	NodeEdit_UPDATE  NodeEdit_Type = 3
)

// Enum value maps for NodeEdit_Type.
var (
	NodeEdit_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "INSERT",
		2: "DELETE",
		3: "UPDATE",
	}
	NodeEdit_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"INSERT":  1,
		"DELETE":  2,
		"UPDATE":  3,
	}
)

func (x NodeEdit_Type) Enum() *NodeEdit_Type {
	p := new(NodeEdit_Type)
	*p = x
	return p
}

func (x NodeEdit_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeEdit_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_workflow_node_proto_enumTypes[1].Descriptor()
}

func (NodeEdit_Type) Type() protoreflect.EnumType {
	return &file_protos_workflow_node_proto_enumTypes[1]
}

func (x NodeEdit_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeEdit_Type.Descriptor instead.
func (NodeEdit_Type) EnumDescriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{5, 0}
}

// Represents a single node within a workflow graph
type Node struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this node within the workflow
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Human-readable description of the task
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// IDs of parent nodes (dependencies)
	ParentIds []string `protobuf:"bytes,3,rep,name=parent_ids,json=parentIds,proto3" json:"parent_ids,omitempty"`
	// IDs of child nodes (dependents)
	ChildIds []string `protobuf:"bytes,4,rep,name=child_ids,json=childIds,proto3" json:"child_ids,omitempty"`
	// The agent or node type this task is assigned to (PlanningAgent, WorkerAgent, etc.)
	Agent *Agent `protobuf:"bytes,5,opt,name=agent,proto3" json:"agent,omitempty"`
	// How to invoke the node
	ExecutionOptions *ExecutionOptions `protobuf:"bytes,6,opt,name=execution_options,json=executionOptions,proto3" json:"execution_options,omitempty"`
	// All the tasks in the workflow (in a graph structure)
	AllTasks []*Task `protobuf:"bytes,7,rep,name=all_tasks,json=allTasks,proto3" json:"all_tasks,omitempty"`
	// The task this node was assigned to perform
	AssignedTask *Task `protobuf:"bytes,8,opt,name=assigned_task,json=assignedTask,proto3" json:"assigned_task,omitempty"`
	// Current status of this node, including progress logs
	Status Status `protobuf:"varint,9,opt,name=status,proto3,enum=aisociety.workflow.Status" json:"status,omitempty"`
	// Any changes to the nodes (ex. inserting nodes to fulfill tasks).
	Edits []*NodeEdit `protobuf:"bytes,10,rep,name=edits,proto3" json:"edits,omitempty"`
	// Whether the node is complete, and immutable.
	IsFinal       bool `protobuf:"varint,11,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_protos_workflow_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Node) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Node) GetParentIds() []string {
	if x != nil {
		return x.ParentIds
	}
	return nil
}

func (x *Node) GetChildIds() []string {
	if x != nil {
		return x.ChildIds
	}
	return nil
}

func (x *Node) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *Node) GetExecutionOptions() *ExecutionOptions {
	if x != nil {
		return x.ExecutionOptions
	}
	return nil
}

func (x *Node) GetAllTasks() []*Task {
	if x != nil {
		return x.AllTasks
	}
	return nil
}

func (x *Node) GetAssignedTask() *Task {
	if x != nil {
		return x.AssignedTask
	}
	return nil
}

func (x *Node) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *Node) GetEdits() []*NodeEdit {
	if x != nil {
		return x.Edits
	}
	return nil
}

func (x *Node) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

type ExecutionOptions struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Timeout       *durationpb.Duration           `protobuf:"bytes,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	RetryOptions  *ExecutionOptions_RetryOptions `protobuf:"bytes,2,opt,name=retry_options,json=retryOptions,proto3" json:"retry_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutionOptions) Reset() {
	*x = ExecutionOptions{}
	mi := &file_protos_workflow_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionOptions) ProtoMessage() {}

func (x *ExecutionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionOptions.ProtoReflect.Descriptor instead.
func (*ExecutionOptions) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{1}
}

func (x *ExecutionOptions) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *ExecutionOptions) GetRetryOptions() *ExecutionOptions_RetryOptions {
	if x != nil {
		return x.RetryOptions
	}
	return nil
}

// Placeholder for agent identity (to be defined in detail)
type Agent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`       // A unique specification fro the model
	Role          string                 `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`                            // e.g., "Planner", "Worker", "Supervisor"
	ModelType     string                 `protobuf:"bytes,3,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"` // e.g., "Claude-3", "GPT-4"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Agent) Reset() {
	*x = Agent{}
	mi := &file_protos_workflow_node_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{2}
}

func (x *Agent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Agent) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Agent) GetModelType() string {
	if x != nil {
		return x.ModelType
	}
	return ""
}

// Task definition. A node fulfills a task, or updates tasks
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                            // unique id for this task
	Goal          string                 `protobuf:"bytes,2,opt,name=goal,proto3" json:"goal,omitempty"`                                        // name for the task
	DependencyIds []string               `protobuf:"bytes,3,rep,name=dependency_ids,json=dependencyIds,proto3" json:"dependency_ids,omitempty"` // Upstream task neighbors
	Results       []*Task_Result         `protobuf:"bytes,4,rep,name=results,proto3" json:"results,omitempty"`                                  // can be empty
	Subtasks      []*Task                `protobuf:"bytes,6,rep,name=subtasks,proto3" json:"subtasks,omitempty"`                                // a tree of subtasks, with results
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_protos_workflow_node_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{3}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetGoal() string {
	if x != nil {
		return x.Goal
	}
	return ""
}

func (x *Task) GetDependencyIds() []string {
	if x != nil {
		return x.DependencyIds
	}
	return nil
}

func (x *Task) GetResults() []*Task_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *Task) GetSubtasks() []*Task {
	if x != nil {
		return x.Subtasks
	}
	return nil
}

// Placeholder for node status
type NodeStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LastUpdated   int64                  `protobuf:"varint,1,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"` // timestamp (epoch millis)
	Progress      []*NodeStatus_Update   `protobuf:"bytes,2,rep,name=progress,proto3" json:"progress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeStatus) Reset() {
	*x = NodeStatus{}
	mi := &file_protos_workflow_node_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatus) ProtoMessage() {}

func (x *NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatus.ProtoReflect.Descriptor instead.
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{4}
}

func (x *NodeStatus) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *NodeStatus) GetProgress() []*NodeStatus_Update {
	if x != nil {
		return x.Progress
	}
	return nil
}

type NodeEdit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          NodeEdit_Type          `protobuf:"varint,5,opt,name=type,proto3,enum=aisociety.workflow.NodeEdit_Type" json:"type,omitempty"` // Type of edit
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                              // When the edit was made
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                          // Description of the edit
	Node          *Node                  `protobuf:"bytes,6,opt,name=node,proto3" json:"node,omitempty"`                                        // New node data (for insert/update)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeEdit) Reset() {
	*x = NodeEdit{}
	mi := &file_protos_workflow_node_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeEdit) ProtoMessage() {}

func (x *NodeEdit) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeEdit.ProtoReflect.Descriptor instead.
func (*NodeEdit) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{5}
}

func (x *NodeEdit) GetType() NodeEdit_Type {
	if x != nil {
		return x.Type
	}
	return NodeEdit_UNKNOWN
}

func (x *NodeEdit) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *NodeEdit) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NodeEdit) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

// WorkflowService messages
type CreateWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Caller        *Caller                `protobuf:"bytes,2,opt,name=caller,proto3" json:"caller,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWorkflowRequest) Reset() {
	*x = CreateWorkflowRequest{}
	mi := &file_protos_workflow_node_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowRequest) ProtoMessage() {}

func (x *CreateWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{6}
}

func (x *CreateWorkflowRequest) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *CreateWorkflowRequest) GetCaller() *Caller {
	if x != nil {
		return x.Caller
	}
	return nil
}

type CreateWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWorkflowResponse) Reset() {
	*x = CreateWorkflowResponse{}
	mi := &file_protos_workflow_node_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowResponse) ProtoMessage() {}

func (x *CreateWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowResponse.ProtoReflect.Descriptor instead.
func (*CreateWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{7}
}

func (x *CreateWorkflowResponse) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type GetWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowRequest) Reset() {
	*x = GetWorkflowRequest{}
	mi := &file_protos_workflow_node_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowRequest) ProtoMessage() {}

func (x *GetWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{8}
}

func (x *GetWorkflowRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type GetWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowResponse) Reset() {
	*x = GetWorkflowResponse{}
	mi := &file_protos_workflow_node_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowResponse) ProtoMessage() {}

func (x *GetWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{9}
}

func (x *GetWorkflowResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ListWorkflowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowsRequest) Reset() {
	*x = ListWorkflowsRequest{}
	mi := &file_protos_workflow_node_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsRequest) ProtoMessage() {}

func (x *ListWorkflowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowsRequest) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{10}
}

type ListWorkflowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowIds   []string               `protobuf:"bytes,1,rep,name=workflow_ids,json=workflowIds,proto3" json:"workflow_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowsResponse) Reset() {
	*x = ListWorkflowsResponse{}
	mi := &file_protos_workflow_node_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsResponse) ProtoMessage() {}

func (x *ListWorkflowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsResponse.ProtoReflect.Descriptor instead.
func (*ListWorkflowsResponse) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{11}
}

func (x *ListWorkflowsResponse) GetWorkflowIds() []string {
	if x != nil {
		return x.WorkflowIds
	}
	return nil
}

type UpdateWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Nodes         []*Node                `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Caller        *Caller                `protobuf:"bytes,3,opt,name=caller,proto3" json:"caller,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkflowRequest) Reset() {
	*x = UpdateWorkflowRequest{}
	mi := &file_protos_workflow_node_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowRequest) ProtoMessage() {}

func (x *UpdateWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateWorkflowRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *UpdateWorkflowRequest) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *UpdateWorkflowRequest) GetCaller() *Caller {
	if x != nil {
		return x.Caller
	}
	return nil
}

type UpdateWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkflowResponse) Reset() {
	*x = UpdateWorkflowResponse{}
	mi := &file_protos_workflow_node_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowResponse) ProtoMessage() {}

func (x *UpdateWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowResponse.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateWorkflowResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// NodeService messages
type GetNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	NodeId        string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeRequest) Reset() {
	*x = GetNodeRequest{}
	mi := &file_protos_workflow_node_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRequest) ProtoMessage() {}

func (x *GetNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRequest.ProtoReflect.Descriptor instead.
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{14}
}

func (x *GetNodeRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *GetNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeResponse) Reset() {
	*x = GetNodeResponse{}
	mi := &file_protos_workflow_node_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeResponse) ProtoMessage() {}

func (x *GetNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeResponse.ProtoReflect.Descriptor instead.
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{15}
}

func (x *GetNodeResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

// *
// Identifies the caller making a request, including agent identity and worknode context.
type Caller struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agent         string                 `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	WorknodeId    string                 `protobuf:"bytes,2,opt,name=worknode_id,json=worknodeId,proto3" json:"worknode_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Caller) Reset() {
	*x = Caller{}
	mi := &file_protos_workflow_node_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Caller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Caller) ProtoMessage() {}

func (x *Caller) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Caller.ProtoReflect.Descriptor instead.
func (*Caller) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{16}
}

func (x *Caller) GetAgent() string {
	if x != nil {
		return x.Agent
	}
	return ""
}

func (x *Caller) GetWorknodeId() string {
	if x != nil {
		return x.WorknodeId
	}
	return ""
}

type UpdateNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Node          *Node                  `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Caller        *Caller                `protobuf:"bytes,3,opt,name=caller,proto3" json:"caller,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNodeRequest) Reset() {
	*x = UpdateNodeRequest{}
	mi := &file_protos_workflow_node_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeRequest) ProtoMessage() {}

func (x *UpdateNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeRequest) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateNodeRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *UpdateNodeRequest) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *UpdateNodeRequest) GetCaller() *Caller {
	if x != nil {
		return x.Caller
	}
	return nil
}

type UpdateNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNodeResponse) Reset() {
	*x = UpdateNodeResponse{}
	mi := &file_protos_workflow_node_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeResponse) ProtoMessage() {}

func (x *UpdateNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeResponse.ProtoReflect.Descriptor instead.
func (*UpdateNodeResponse) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ExecuteNodeRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	NodeId     string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// The node to execute
	Node *Node `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`
	// Upstream neighbor nodes (dependencies)
	UpstreamNodes []*Node `protobuf:"bytes,4,rep,name=upstream_nodes,json=upstreamNodes,proto3" json:"upstream_nodes,omitempty"`
	// Nodes who depend on me
	DownstreamNodes []*Node `protobuf:"bytes,5,rep,name=downstream_nodes,json=downstreamNodes,proto3" json:"downstream_nodes,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExecuteNodeRequest) Reset() {
	*x = ExecuteNodeRequest{}
	mi := &file_protos_workflow_node_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteNodeRequest) ProtoMessage() {}

func (x *ExecuteNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteNodeRequest.ProtoReflect.Descriptor instead.
func (*ExecuteNodeRequest) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{19}
}

func (x *ExecuteNodeRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ExecuteNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ExecuteNodeRequest) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *ExecuteNodeRequest) GetUpstreamNodes() []*Node {
	if x != nil {
		return x.UpstreamNodes
	}
	return nil
}

func (x *ExecuteNodeRequest) GetDownstreamNodes() []*Node {
	if x != nil {
		return x.DownstreamNodes
	}
	return nil
}

type ExecuteNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteNodeResponse) Reset() {
	*x = ExecuteNodeResponse{}
	mi := &file_protos_workflow_node_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteNodeResponse) ProtoMessage() {}

func (x *ExecuteNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteNodeResponse.ProtoReflect.Descriptor instead.
func (*ExecuteNodeResponse) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{20}
}

func (x *ExecuteNodeResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type TaskList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskList) Reset() {
	*x = TaskList{}
	mi := &file_protos_workflow_node_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskList) ProtoMessage() {}

func (x *TaskList) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskList.ProtoReflect.Descriptor instead.
func (*TaskList) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{21}
}

func (x *TaskList) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type NodeEditList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Edits         []*NodeEdit            `protobuf:"bytes,1,rep,name=edits,proto3" json:"edits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeEditList) Reset() {
	*x = NodeEditList{}
	mi := &file_protos_workflow_node_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeEditList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeEditList) ProtoMessage() {}

func (x *NodeEditList) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeEditList.ProtoReflect.Descriptor instead.
func (*NodeEditList) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{22}
}

func (x *NodeEditList) GetEdits() []*NodeEdit {
	if x != nil {
		return x.Edits
	}
	return nil
}

type ExecutionOptions_RetryOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxAttempts   int32                  `protobuf:"varint,1,opt,name=max_attempts,json=maxAttempts,proto3" json:"max_attempts,omitempty"`
	RetryDelay    *durationpb.Duration   `protobuf:"bytes,2,opt,name=retry_delay,json=retryDelay,proto3" json:"retry_delay,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutionOptions_RetryOptions) Reset() {
	*x = ExecutionOptions_RetryOptions{}
	mi := &file_protos_workflow_node_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionOptions_RetryOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionOptions_RetryOptions) ProtoMessage() {}

func (x *ExecutionOptions_RetryOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionOptions_RetryOptions.ProtoReflect.Descriptor instead.
func (*ExecutionOptions_RetryOptions) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ExecutionOptions_RetryOptions) GetMaxAttempts() int32 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

func (x *ExecutionOptions_RetryOptions) GetRetryDelay() *durationpb.Duration {
	if x != nil {
		return x.RetryDelay
	}
	return nil
}

type Task_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=aisociety.workflow.Status" json:"status,omitempty"`                                                 // any non-0 value is complete
	Summary       string                 `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`                                                                               // short summary of the result
	Output        string                 `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`                                                                                 // detailed output
	Artifacts     map[string]string      `protobuf:"bytes,4,rep,name=artifacts,proto3" json:"artifacts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // name:url pairs of logs, files, structured results of any kind
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Result) Reset() {
	*x = Task_Result{}
	mi := &file_protos_workflow_node_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Result) ProtoMessage() {}

func (x *Task_Result) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Result.ProtoReflect.Descriptor instead.
func (*Task_Result) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Task_Result) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *Task_Result) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Task_Result) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *Task_Result) GetArtifacts() map[string]string {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

type NodeStatus_Update struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=aisociety.workflow.Status" json:"status,omitempty"` // any change to status is reflected here
	UpdatedMillis *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_millis,json=updatedMillis,proto3" json:"updated_millis,omitempty"`
	Message       *string                `protobuf:"bytes,3,opt,name=message,proto3,oneof" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeStatus_Update) Reset() {
	*x = NodeStatus_Update{}
	mi := &file_protos_workflow_node_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeStatus_Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatus_Update) ProtoMessage() {}

func (x *NodeStatus_Update) ProtoReflect() protoreflect.Message {
	mi := &file_protos_workflow_node_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatus_Update.ProtoReflect.Descriptor instead.
func (*NodeStatus_Update) Descriptor() ([]byte, []int) {
	return file_protos_workflow_node_proto_rawDescGZIP(), []int{4, 0}
}

func (x *NodeStatus_Update) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *NodeStatus_Update) GetUpdatedMillis() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedMillis
	}
	return nil
}

func (x *NodeStatus_Update) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

var File_protos_workflow_node_proto protoreflect.FileDescriptor

const file_protos_workflow_node_proto_rawDesc = "" +
	"\n" +
	"\x1aprotos/workflow_node.proto\x12\x12aisociety.workflow\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xfa\x03\n" +
	"\x04Node\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"parent_ids\x18\x03 \x03(\tR\tparentIds\x12\x1b\n" +
	"\tchild_ids\x18\x04 \x03(\tR\bchildIds\x12/\n" +
	"\x05agent\x18\x05 \x01(\v2\x19.aisociety.workflow.AgentR\x05agent\x12Q\n" +
	"\x11execution_options\x18\x06 \x01(\v2$.aisociety.workflow.ExecutionOptionsR\x10executionOptions\x125\n" +
	"\tall_tasks\x18\a \x03(\v2\x18.aisociety.workflow.TaskR\ballTasks\x12=\n" +
	"\rassigned_task\x18\b \x01(\v2\x18.aisociety.workflow.TaskR\fassignedTask\x122\n" +
	"\x06status\x18\t \x01(\x0e2\x1a.aisociety.workflow.StatusR\x06status\x122\n" +
	"\x05edits\x18\n" +
	" \x03(\v2\x1c.aisociety.workflow.NodeEditR\x05edits\x12\x19\n" +
	"\bis_final\x18\v \x01(\bR\aisFinal\"\x8e\x02\n" +
	"\x10ExecutionOptions\x123\n" +
	"\atimeout\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12V\n" +
	"\rretry_options\x18\x02 \x01(\v21.aisociety.workflow.ExecutionOptions.RetryOptionsR\fretryOptions\x1am\n" +
	"\fRetryOptions\x12!\n" +
	"\fmax_attempts\x18\x01 \x01(\x05R\vmaxAttempts\x12:\n" +
	"\vretry_delay\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\n" +
	"retryDelay\"U\n" +
	"\x05Agent\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x12\n" +
	"\x04role\x18\x02 \x01(\tR\x04role\x12\x1d\n" +
	"\n" +
	"model_type\x18\x03 \x01(\tR\tmodelType\"\xbf\x03\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04goal\x18\x02 \x01(\tR\x04goal\x12%\n" +
	"\x0edependency_ids\x18\x03 \x03(\tR\rdependencyIds\x129\n" +
	"\aresults\x18\x04 \x03(\v2\x1f.aisociety.workflow.Task.ResultR\aresults\x124\n" +
	"\bsubtasks\x18\x06 \x03(\v2\x18.aisociety.workflow.TaskR\bsubtasks\x1a\xfa\x01\n" +
	"\x06Result\x122\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1a.aisociety.workflow.StatusR\x06status\x12\x18\n" +
	"\asummary\x18\x02 \x01(\tR\asummary\x12\x16\n" +
	"\x06output\x18\x03 \x01(\tR\x06output\x12L\n" +
	"\tartifacts\x18\x04 \x03(\v2..aisociety.workflow.Task.Result.ArtifactsEntryR\tartifacts\x1a<\n" +
	"\x0eArtifactsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9f\x02\n" +
	"\n" +
	"NodeStatus\x12!\n" +
	"\flast_updated\x18\x01 \x01(\x03R\vlastUpdated\x12A\n" +
	"\bprogress\x18\x02 \x03(\v2%.aisociety.workflow.NodeStatus.UpdateR\bprogress\x1a\xaa\x01\n" +
	"\x06Update\x122\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1a.aisociety.workflow.StatusR\x06status\x12A\n" +
	"\x0eupdated_millis\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\rupdatedMillis\x12\x1d\n" +
	"\amessage\x18\x03 \x01(\tH\x00R\amessage\x88\x01\x01B\n" +
	"\n" +
	"\b_message\"\x84\x02\n" +
	"\bNodeEdit\x125\n" +
	"\x04type\x18\x05 \x01(\x0e2!.aisociety.workflow.NodeEdit.TypeR\x04type\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12,\n" +
	"\x04node\x18\x06 \x01(\v2\x18.aisociety.workflow.NodeR\x04node\"7\n" +
	"\x04Type\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06INSERT\x10\x01\x12\n" +
	"\n" +
	"\x06DELETE\x10\x02\x12\n" +
	"\n" +
	"\x06UPDATE\x10\x03\"{\n" +
	"\x15CreateWorkflowRequest\x12.\n" +
	"\x05nodes\x18\x01 \x03(\v2\x18.aisociety.workflow.NodeR\x05nodes\x122\n" +
	"\x06caller\x18\x02 \x01(\v2\x1a.aisociety.workflow.CallerR\x06caller\"9\n" +
	"\x16CreateWorkflowResponse\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\"5\n" +
	"\x12GetWorkflowRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\"E\n" +
	"\x13GetWorkflowResponse\x12.\n" +
	"\x05nodes\x18\x01 \x03(\v2\x18.aisociety.workflow.NodeR\x05nodes\"\x16\n" +
	"\x14ListWorkflowsRequest\":\n" +
	"\x15ListWorkflowsResponse\x12!\n" +
	"\fworkflow_ids\x18\x01 \x03(\tR\vworkflowIds\"\x9c\x01\n" +
	"\x15UpdateWorkflowRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12.\n" +
	"\x05nodes\x18\x02 \x03(\v2\x18.aisociety.workflow.NodeR\x05nodes\x122\n" +
	"\x06caller\x18\x03 \x01(\v2\x1a.aisociety.workflow.CallerR\x06caller\"2\n" +
	"\x16UpdateWorkflowResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"J\n" +
	"\x0eGetNodeRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\"?\n" +
	"\x0fGetNodeResponse\x12,\n" +
	"\x04node\x18\x01 \x01(\v2\x18.aisociety.workflow.NodeR\x04node\"?\n" +
	"\x06Caller\x12\x14\n" +
	"\x05agent\x18\x01 \x01(\tR\x05agent\x12\x1f\n" +
	"\vworknode_id\x18\x02 \x01(\tR\n" +
	"worknodeId\"\x96\x01\n" +
	"\x11UpdateNodeRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12,\n" +
	"\x04node\x18\x02 \x01(\v2\x18.aisociety.workflow.NodeR\x04node\x122\n" +
	"\x06caller\x18\x03 \x01(\v2\x1a.aisociety.workflow.CallerR\x06caller\".\n" +
	"\x12UpdateNodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x82\x02\n" +
	"\x12ExecuteNodeRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12,\n" +
	"\x04node\x18\x03 \x01(\v2\x18.aisociety.workflow.NodeR\x04node\x12?\n" +
	"\x0eupstream_nodes\x18\x04 \x03(\v2\x18.aisociety.workflow.NodeR\rupstreamNodes\x12C\n" +
	"\x10downstream_nodes\x18\x05 \x03(\v2\x18.aisociety.workflow.NodeR\x0fdownstreamNodes\"C\n" +
	"\x13ExecuteNodeResponse\x12,\n" +
	"\x04node\x18\x01 \x01(\v2\x18.aisociety.workflow.NodeR\x04node\":\n" +
	"\bTaskList\x12.\n" +
	"\x05tasks\x18\x01 \x03(\v2\x18.aisociety.workflow.TaskR\x05tasks\"B\n" +
	"\fNodeEditList\x122\n" +
	"\x05edits\x18\x01 \x03(\v2\x1c.aisociety.workflow.NodeEditR\x05edits*\x97\x01\n" +
	"\x06Status\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\b\n" +
	"\x04PASS\x10\x01\x12\b\n" +
	"\x04FAIL\x10\x02\x12\v\n" +
	"\aSKIPPED\x10\x03\x12\f\n" +
	"\bFILTERED\x10\x04\x12\x0e\n" +
	"\n" +
	"TASK_ERROR\x10\x05\x12\x0f\n" +
	"\vINFRA_ERROR\x10\x06\x12\v\n" +
	"\aTIMEOUT\x10\a\x12\t\n" +
	"\x05CRASH\x10\b\x12\v\n" +
	"\aBLOCKED\x10\t\x12\v\n" +
	"\aRUNNING\x10\n" +
	"2\xda\x04\n" +
	"\x0fWorkflowService\x12g\n" +
	"\x0eCreateWorkflow\x12).aisociety.workflow.CreateWorkflowRequest\x1a*.aisociety.workflow.CreateWorkflowResponse\x12^\n" +
	"\vGetWorkflow\x12&.aisociety.workflow.GetWorkflowRequest\x1a'.aisociety.workflow.GetWorkflowResponse\x12d\n" +
	"\rListWorkflows\x12(.aisociety.workflow.ListWorkflowsRequest\x1a).aisociety.workflow.ListWorkflowsResponse\x12g\n" +
	"\x0eUpdateWorkflow\x12).aisociety.workflow.UpdateWorkflowRequest\x1a*.aisociety.workflow.UpdateWorkflowResponse\x12R\n" +
	"\aGetNode\x12\".aisociety.workflow.GetNodeRequest\x1a#.aisociety.workflow.GetNodeResponse\x12[\n" +
	"\n" +
	"UpdateNode\x12%.aisociety.workflow.UpdateNodeRequest\x1a&.aisociety.workflow.UpdateNodeResponse2m\n" +
	"\vNodeService\x12^\n" +
	"\vExecuteNode\x12&.aisociety.workflow.ExecuteNodeRequest\x1a'.aisociety.workflow.ExecuteNodeResponseB\"Z paul.hobbs.page/aisociety/protosb\x06proto3"

var (
	file_protos_workflow_node_proto_rawDescOnce sync.Once
	file_protos_workflow_node_proto_rawDescData []byte
)

func file_protos_workflow_node_proto_rawDescGZIP() []byte {
	file_protos_workflow_node_proto_rawDescOnce.Do(func() {
		file_protos_workflow_node_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_workflow_node_proto_rawDesc), len(file_protos_workflow_node_proto_rawDesc)))
	})
	return file_protos_workflow_node_proto_rawDescData
}

var file_protos_workflow_node_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protos_workflow_node_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_protos_workflow_node_proto_goTypes = []any{
	(Status)(0),                           // 0: aisociety.workflow.Status
	(NodeEdit_Type)(0),                    // 1: aisociety.workflow.NodeEdit.Type
	(*Node)(nil),                          // 2: aisociety.workflow.Node
	(*ExecutionOptions)(nil),              // 3: aisociety.workflow.ExecutionOptions
	(*Agent)(nil),                         // 4: aisociety.workflow.Agent
	(*Task)(nil),                          // 5: aisociety.workflow.Task
	(*NodeStatus)(nil),                    // 6: aisociety.workflow.NodeStatus
	(*NodeEdit)(nil),                      // 7: aisociety.workflow.NodeEdit
	(*CreateWorkflowRequest)(nil),         // 8: aisociety.workflow.CreateWorkflowRequest
	(*CreateWorkflowResponse)(nil),        // 9: aisociety.workflow.CreateWorkflowResponse
	(*GetWorkflowRequest)(nil),            // 10: aisociety.workflow.GetWorkflowRequest
	(*GetWorkflowResponse)(nil),           // 11: aisociety.workflow.GetWorkflowResponse
	(*ListWorkflowsRequest)(nil),          // 12: aisociety.workflow.ListWorkflowsRequest
	(*ListWorkflowsResponse)(nil),         // 13: aisociety.workflow.ListWorkflowsResponse
	(*UpdateWorkflowRequest)(nil),         // 14: aisociety.workflow.UpdateWorkflowRequest
	(*UpdateWorkflowResponse)(nil),        // 15: aisociety.workflow.UpdateWorkflowResponse
	(*GetNodeRequest)(nil),                // 16: aisociety.workflow.GetNodeRequest
	(*GetNodeResponse)(nil),               // 17: aisociety.workflow.GetNodeResponse
	(*Caller)(nil),                        // 18: aisociety.workflow.Caller
	(*UpdateNodeRequest)(nil),             // 19: aisociety.workflow.UpdateNodeRequest
	(*UpdateNodeResponse)(nil),            // 20: aisociety.workflow.UpdateNodeResponse
	(*ExecuteNodeRequest)(nil),            // 21: aisociety.workflow.ExecuteNodeRequest
	(*ExecuteNodeResponse)(nil),           // 22: aisociety.workflow.ExecuteNodeResponse
	(*TaskList)(nil),                      // 23: aisociety.workflow.TaskList
	(*NodeEditList)(nil),                  // 24: aisociety.workflow.NodeEditList
	(*ExecutionOptions_RetryOptions)(nil), // 25: aisociety.workflow.ExecutionOptions.RetryOptions
	(*Task_Result)(nil),                   // 26: aisociety.workflow.Task.Result
	nil,                                   // 27: aisociety.workflow.Task.Result.ArtifactsEntry
	(*NodeStatus_Update)(nil),             // 28: aisociety.workflow.NodeStatus.Update
	(*durationpb.Duration)(nil),           // 29: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),         // 30: google.protobuf.Timestamp
}
var file_protos_workflow_node_proto_depIdxs = []int32{
	4,  // 0: aisociety.workflow.Node.agent:type_name -> aisociety.workflow.Agent
	3,  // 1: aisociety.workflow.Node.execution_options:type_name -> aisociety.workflow.ExecutionOptions
	5,  // 2: aisociety.workflow.Node.all_tasks:type_name -> aisociety.workflow.Task
	5,  // 3: aisociety.workflow.Node.assigned_task:type_name -> aisociety.workflow.Task
	0,  // 4: aisociety.workflow.Node.status:type_name -> aisociety.workflow.Status
	7,  // 5: aisociety.workflow.Node.edits:type_name -> aisociety.workflow.NodeEdit
	29, // 6: aisociety.workflow.ExecutionOptions.timeout:type_name -> google.protobuf.Duration
	25, // 7: aisociety.workflow.ExecutionOptions.retry_options:type_name -> aisociety.workflow.ExecutionOptions.RetryOptions
	26, // 8: aisociety.workflow.Task.results:type_name -> aisociety.workflow.Task.Result
	5,  // 9: aisociety.workflow.Task.subtasks:type_name -> aisociety.workflow.Task
	28, // 10: aisociety.workflow.NodeStatus.progress:type_name -> aisociety.workflow.NodeStatus.Update
	1,  // 11: aisociety.workflow.NodeEdit.type:type_name -> aisociety.workflow.NodeEdit.Type
	30, // 12: aisociety.workflow.NodeEdit.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 13: aisociety.workflow.NodeEdit.node:type_name -> aisociety.workflow.Node
	2,  // 14: aisociety.workflow.CreateWorkflowRequest.nodes:type_name -> aisociety.workflow.Node
	18, // 15: aisociety.workflow.CreateWorkflowRequest.caller:type_name -> aisociety.workflow.Caller
	2,  // 16: aisociety.workflow.GetWorkflowResponse.nodes:type_name -> aisociety.workflow.Node
	2,  // 17: aisociety.workflow.UpdateWorkflowRequest.nodes:type_name -> aisociety.workflow.Node
	18, // 18: aisociety.workflow.UpdateWorkflowRequest.caller:type_name -> aisociety.workflow.Caller
	2,  // 19: aisociety.workflow.GetNodeResponse.node:type_name -> aisociety.workflow.Node
	2,  // 20: aisociety.workflow.UpdateNodeRequest.node:type_name -> aisociety.workflow.Node
	18, // 21: aisociety.workflow.UpdateNodeRequest.caller:type_name -> aisociety.workflow.Caller
	2,  // 22: aisociety.workflow.ExecuteNodeRequest.node:type_name -> aisociety.workflow.Node
	2,  // 23: aisociety.workflow.ExecuteNodeRequest.upstream_nodes:type_name -> aisociety.workflow.Node
	2,  // 24: aisociety.workflow.ExecuteNodeRequest.downstream_nodes:type_name -> aisociety.workflow.Node
	2,  // 25: aisociety.workflow.ExecuteNodeResponse.node:type_name -> aisociety.workflow.Node
	5,  // 26: aisociety.workflow.TaskList.tasks:type_name -> aisociety.workflow.Task
	7,  // 27: aisociety.workflow.NodeEditList.edits:type_name -> aisociety.workflow.NodeEdit
	29, // 28: aisociety.workflow.ExecutionOptions.RetryOptions.retry_delay:type_name -> google.protobuf.Duration
	0,  // 29: aisociety.workflow.Task.Result.status:type_name -> aisociety.workflow.Status
	27, // 30: aisociety.workflow.Task.Result.artifacts:type_name -> aisociety.workflow.Task.Result.ArtifactsEntry
	0,  // 31: aisociety.workflow.NodeStatus.Update.status:type_name -> aisociety.workflow.Status
	30, // 32: aisociety.workflow.NodeStatus.Update.updated_millis:type_name -> google.protobuf.Timestamp
	8,  // 33: aisociety.workflow.WorkflowService.CreateWorkflow:input_type -> aisociety.workflow.CreateWorkflowRequest
	10, // 34: aisociety.workflow.WorkflowService.GetWorkflow:input_type -> aisociety.workflow.GetWorkflowRequest
	12, // 35: aisociety.workflow.WorkflowService.ListWorkflows:input_type -> aisociety.workflow.ListWorkflowsRequest
	14, // 36: aisociety.workflow.WorkflowService.UpdateWorkflow:input_type -> aisociety.workflow.UpdateWorkflowRequest
	16, // 37: aisociety.workflow.WorkflowService.GetNode:input_type -> aisociety.workflow.GetNodeRequest
	19, // 38: aisociety.workflow.WorkflowService.UpdateNode:input_type -> aisociety.workflow.UpdateNodeRequest
	21, // 39: aisociety.workflow.NodeService.ExecuteNode:input_type -> aisociety.workflow.ExecuteNodeRequest
	9,  // 40: aisociety.workflow.WorkflowService.CreateWorkflow:output_type -> aisociety.workflow.CreateWorkflowResponse
	11, // 41: aisociety.workflow.WorkflowService.GetWorkflow:output_type -> aisociety.workflow.GetWorkflowResponse
	13, // 42: aisociety.workflow.WorkflowService.ListWorkflows:output_type -> aisociety.workflow.ListWorkflowsResponse
	15, // 43: aisociety.workflow.WorkflowService.UpdateWorkflow:output_type -> aisociety.workflow.UpdateWorkflowResponse
	17, // 44: aisociety.workflow.WorkflowService.GetNode:output_type -> aisociety.workflow.GetNodeResponse
	20, // 45: aisociety.workflow.WorkflowService.UpdateNode:output_type -> aisociety.workflow.UpdateNodeResponse
	22, // 46: aisociety.workflow.NodeService.ExecuteNode:output_type -> aisociety.workflow.ExecuteNodeResponse
	40, // [40:47] is the sub-list for method output_type
	33, // [33:40] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_protos_workflow_node_proto_init() }
func file_protos_workflow_node_proto_init() {
	if File_protos_workflow_node_proto != nil {
		return
	}
	file_protos_workflow_node_proto_msgTypes[26].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_workflow_node_proto_rawDesc), len(file_protos_workflow_node_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_protos_workflow_node_proto_goTypes,
		DependencyIndexes: file_protos_workflow_node_proto_depIdxs,
		EnumInfos:         file_protos_workflow_node_proto_enumTypes,
		MessageInfos:      file_protos_workflow_node_proto_msgTypes,
	}.Build()
	File_protos_workflow_node_proto = out.File
	file_protos_workflow_node_proto_goTypes = nil
	file_protos_workflow_node_proto_depIdxs = nil
}
